(2020-02-03 22:17:47.520139) | Strategy init with wallet: BNBUSDT
(2020-02-03 22:17:47.520771) | Interval that is fed to network has length: 16
(2020-02-03 22:17:47.520771) | Neuron initiated with id 0 in layer 0
(2020-02-03 22:17:47.520771) | Neuron initiated with id 1 in layer 0
(2020-02-03 22:17:47.520771) | Neuron initiated with id 2 in layer 0
(2020-02-03 22:17:47.520771) | Neuron initiated with id 3 in layer 0
(2020-02-03 22:17:47.520771) | Neuron initiated with id 4 in layer 0
(2020-02-03 22:17:47.520771) | Neuron initiated with id 5 in layer 0
(2020-02-03 22:17:47.521768) | Neuron initiated with id 6 in layer 0
(2020-02-03 22:17:47.521768) | Neuron initiated with id 7 in layer 0
(2020-02-03 22:17:47.521768) | Neuron initiated with id 8 in layer 0
(2020-02-03 22:17:47.521768) | Neuron initiated with id 9 in layer 0
(2020-02-03 22:17:47.521768) | Neuron initiated with id 10 in layer 0
(2020-02-03 22:17:47.522809) | Neuron initiated with id 11 in layer 0
(2020-02-03 22:17:47.524842) | Neuron initiated with id 12 in layer 0
(2020-02-03 22:17:47.527839) | Neuron initiated with id 13 in layer 0
(2020-02-03 22:17:47.527839) | Neuron initiated with id 14 in layer 0
(2020-02-03 22:17:47.527839) | Neuron initiated with id 15 in layer 0
(2020-02-03 22:17:47.528836) | Neuron initiated with id 0 in layer 1
(2020-02-03 22:17:47.529100) | Assigned random weights
(2020-02-03 22:17:47.529100) | Loading in model line: ['1', '0', '[0.7112727272278788,0.261706291814908]', '0.0']
Traceback (most recent call last):
  File "main.py", line 41, in <module>
    start = main()
  File "main.py", line 33, in __init__
    strategy = Strategy.Strategy(binance_client=client,wallet=wallet)
  File "C:\Users\robbe\PycharmProjects\Cryp\Strategy.py", line 32, in __init__
    self.train(network_da)
  File "C:\Users\robbe\PycharmProjects\Cryp\Strategy.py", line 47, in train
    fitness = eval(self.model)
  File "C:\Users\robbe\PycharmProjects\Cryp\Strategy.py", line 45, in eval
    fitness = self.fitness(self.run_over_data(data=data, model=model,interval_size=self.model_interval))
  File "C:\Users\robbe\PycharmProjects\Cryp\Strategy.py", line 87, in run_over_data
    afwijkingen.append(abs(abs(model.predict(inputs=data[i:i + interval_size]))-abs(data[i+interval_size+1])))
  File "C:\Users\robbe\PycharmProjects\Cryp\AI\Model.py", line 46, in predict
    outputs = self.activation_function((weights@values)+biases)
ValueError: shapes (1,2) and (16,1) not aligned: 2 (dim 1) != 16 (dim 0)
